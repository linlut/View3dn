################################################
# YOU SHOULD NOT NEED TO MODIFY ANYTHING BELOW #
################################################

# Auto-detect SOFA_DIR if not specified
isEmpty(SOFA_DIR) {
  win32 {
    SOFA_DIR = $$system(echo %CD%)
  }
  else {
    SOFA_DIR = $$system(pwd)
  }
}

!include( sofa-local.cfg ) {
  # Copy sofa-default.cfg to sofa-local.cfg and modify it to change local options
  include( sofa-default.cfg )
}

CONFIG -= qt

win32{
	CONFIG -= flat # preserve directory structure in files lists
	contains (CONFIG, debug, debug|release) {
		 CONFIGDEBUG=debug
	}
	contains (CONFIG, release, debug|release) {
		 CONFIGDEBUG=release
	}

	# It's for windows project where we have output streams in a console.

	# Config for Visual C++ 6
	win32-msvc{
		CONFIGPROJECT=console vc6 thread
		contains (CONFIGDEBUG, debug) {
			LIBSDIRECTORY=win32/DebugVC6
		}
		contains (CONFIGDEBUG, release) {
			LIBSDIRECTORY=win32/ReleaseVC6
		}
	}
	
	# Config for Visual C++ 7
	win32-msvc.net{
		CONFIGPROJECT=console vc7 thread
		contains (CONFIGDEBUG, debug) {
			LIBSDIRECTORY=win32/DebugVC7
			QMAKE_LFLAGS += /NODEFAULTLIB:libcd /NODEFAULTLIB:MSVCRT	
		}
		contains (CONFIGDEBUG, release) {
			LIBSDIRECTORY=win32/ReleaseVC7
			QMAKE_LFLAGS += /NODEFAULTLIB:libc /NODEFAULTLIB:MSVCRTD
		}
		QMAKE_CXXFLAGS_DEBUG = -wd4675 -wd4250 -GR -GX -MDd # -O1 -Og -Ob2 -GA -Ot -MDd # -G7 
		QMAKE_CXXFLAGS_RELEASE = -wd4675 -wd4250 -GR -GX -Ox -Og -Ob2 -GA -Ot -MD # -G7
	}
	
	# Config for Visual C++ 8
	win32-msvc2005{
		CONFIGPROJECT=console vc7 thread
		contains (CONFIGDEBUG, debug) {
			LIBSDIRECTORY=win32/DebugVC8
			QMAKE_LFLAGS += /NODEFAULTLIB:libcd /NODEFAULTLIB:MSVCRT	
		}
		contains (CONFIGDEBUG, release) {
			LIBSDIRECTORY=win32/ReleaseVC8
			QMAKE_LFLAGS += /NODEFAULTLIB:libc /NODEFAULTLIB:MSVCRTD
		}
		QMAKE_CXXFLAGS_DEBUG = -wd4996 -wd4250 -GR -EHsc -MDd  -Od -ZI -Gm # -O1 -Og -Ob2 -GA -Ot -MDd # -G7 
		QMAKE_CXXFLAGS_RELEASE = -wd4996 -wd4250 -GR -EHsc -Ox -Og -Ob2 -GA -Ot -MD # -G7
	}

	# No support for DLL yet
	CONFIGLIBRARIES=staticlib

	#CONFIGLIBRARIES=dll
	#MSVCPROJ_LIBOPTIONS=/IMPLIB:$(TargetDir)$(TargetName).lib

	# libs has no suffix
	LIBSUFFIX=
}
unix {
 	contains (CONFIG, debug) {
		 CONFIGDEBUG=debug
	}
	contains (CONFIG, release) {
		 CONFIGDEBUG=release
	}
	#LIBSDIRECTORY=linux/$$CONFIGDEBUG
	LIBSDIRECTORY=linux

	# Use shared library
	CONFIGLIBRARIES=dynamiclib

	contains (CONFIGDEBUG, debug) {
		LIBSUFFIX = d
	}
}

contains (CONFIGDEBUG, release) {
	DEFINES += NDEBUG
}

contains (CONFIGDEBUG, debug) {
	SUFFIX = d
}

OBJECTS_DIR = OBJ/$$CONFIGDEBUG

CONFIGLIBRARIES+= \
                  warn_on \
                  stl \
                  rtti \
                  thread

CONFIGPROJECT += warn_on
CONFIGPROJECTGUI = $$CONFIGPROJECT
CONFIGPROJECTCMD = $$CONFIGPROJECT
CONFIGPROJECTCMD += console

INCLUDEPATH *= \
               $$SOFA_DIR/include 

DEPENDPATH  *= \
               $$SOFA_DIR/base \
               $$SOFA_DIR/collision \               
               $$SOFA_DIR/core \
               $$SOFA_DIR/gui \
               $$SOFA_DIR/io \
               $$SOFA_DIR/ogl \
               $$SOFA_DIR/system \
               $$SOFA_DIR/xml 

QMAKE_LIBDIR = $$SOFA_DIR/lib/$$LIBSDIRECTORY $$SOFA_DIR/lib/$$LIBSDIRECTORY/ /users/nanzhang/lib

# List of libs to link with

SOFA_EXT_LIBS *=  -lNewMAT$$LIBSUFFIX
win32 {
	SOFA_EXT_LIBS *= -llibxml2 -lGLaux -lglut32 -lcomctl32 -lopengl32 -lglu32 -lAdvAPI32 -lUser32 -lShell32 -lGdi32 -lWSock32 -lWS2_32 -lOle32
}

unix {
	SOFA_EXT_LIBS *= -L/usr/X11R6/lib -lglut -lGL -lGLU -lpthread -lxml2 -lz
}

#SOFA_FRAMEWORK_LIBS *= -lsofahelper$$LIBSUFFIX -lsofadefaulttype$$LIBSUFFIX -lsofacore$$LIBSUFFIX

contains(DEFINES,SOFA_HAVE_PNG){
	win32 {
		SOFA_EXT_LIBS *= -llibpng -lzlib
	}
	unix {
		SOFA_EXT_LIBS *= -lpng -lz
	}
}

#SOFA_MODULES_LIBS *= -lsofacomponent$$LIBSUFFIX -lsofasimulation$$LIBSUFFIX

# FLTK

contains (DEFINES, SOFA_GUI_FLTK) {
	SOFA_GUI_LIBS *= -lsofaguifltk$$LIBSUFFIX
	win32 {
		SOFA_EXT_LIBS *= -lfltk -lfltkgl
	}
	unix {
		SOFA_EXT_LIBS *= -lfltk_gl -lfltk
	}
}

# QT

contains (DEFINES, SOFA_GUI_QT) {
	SOFA_GUI_LIBS *= -lsofaguiqt$$LIBSUFFIX
	CONFIGPROJECTGUI += qt
	QT += opengl qt3support	
}

# CUDA

contains (DEFINES, SOFA_GPU_CUDA) {
	SOFA_MODULES_LIBS *= -lsofagpucuda$$LIBSUFFIX
	SOFA_EXT_LIBS *= -lcudart
	cuda.input = CUDA_SOURCES
	QMAKE_EXTRA_UNIX_COMPILERS += cuda
	win32 {
		INCLUDEPATH += $(CUDA_INC_DIR)
		QMAKE_LIBDIR += $(CUDA_LIB_DIR)

		cuda.output = $$OBJECTS_DIR/${QMAKE_FILE_BASE}_cuda.obj
		cuda.commands = $(CUDA_BIN_DIR)/nvcc.exe -c -Xcompiler $$join(QMAKE_CXXFLAGS,",") $$join(INCLUDEPATH,'" -I "','-I "','"') ${QMAKE_FILE_NAME} -o ${QMAKE_FILE_OUT}
	}
	unix {
		# auto-detect CUDA path
		CUDA_DIR = $$system(which nvcc | sed 's,/bin/nvcc$,,')
		INCLUDEPATH += $$CUDA_DIR/include
		QMAKE_LIBDIR += $$CUDA_DIR/lib

		cuda.output = ${OBJECTS_DIR}${QMAKE_FILE_BASE}_cuda.obj
		cuda.commands = nvcc -c -Xcompiler $$join(QMAKE_CXXFLAGS,",") $$join(INCLUDEPATH,'" -I "','-I "','"') ${QMAKE_FILE_NAME} -o ${QMAKE_FILE_OUT}
		cuda.depends = nvcc -M -Xcompiler $$join(QMAKE_CXXFLAGS,",") $$join(INCLUDEPATH,'" -I "','-I "','"') ${QMAKE_FILE_NAME} | tail +2 | sed "s,^ *,,; s/ \\\\$//" | paste -s -d " " | sed "s,/usr/[^ ]*,,g" | tee dep-${QMAKE_FILE_NAME}
	}
}

SOFA_LIBS = $$SOFA_MODULES_LIBS $$SOFA_FRAMEWORK_LIBS $$SOFA_EXT_LIBS

# default destination directory
DESTDIR = $$SOFA_DIR/lib/$$LIBSDIRECTORY

#win32{
#  DLLDESTDIR = $$SOFA_DIR/bin
#}
